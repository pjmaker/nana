#! /bin/sh
#
# gnuware.in - sends off a test result to the gnuware address.
# 
# Copyright (c) 1998 Phil Maker <pjm@gnu.org>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# $Id: gnuware.in,v 1.1.1.1 1999/09/12 03:26:48 pjm Exp $
#

case $#
in 
    0)
	MAILER=cat
	DEST=-
	;;
    2)
	MAILER=$1
	DEST=$2
	;;
    *)
        echo usage $0 "[mailer dest]"
	exit 1
	;;
esac

## Generate the report to send off
(
echo "* summary"
echo "package ::= nana"
echo "version ::= 3.0"
echo "host ::= x86_64-pc-linux-gnu"
echo "target ::= x86_64-pc-linux-gnu"
echo "build ::= x86_64-pc-linux-gnu"

# valid values for test/check.sum are:
echo "result ::= `cat test/check.sum`"

echo "" 
echo "* administration information"
echo "date ::= `date`"
echo "user ::= `whoami`@`uname -n`"

echo ""
echo "* other generic configuration variables"
echo "host_cpu ::= x86_64"
echo "host_vendor ::= pc"
echo "host_os ::= linux-gnu"
echo "target_cpu ::= x86_64"
echo "target_vendor ::= pc"
echo "target_os ::= linux-gnu"
echo "build_cpu ::= x86_64"
echo "build_vendor ::= pc"
echo "build_os ::= linux-gnu"
echo "CFLAGS ::= -g -O2"
echo "CPPFLAGS ::= "
echo "CXXFLAGS ::= -g -O2"
echo "LDFLAGS ::= "
echo "LIBS ::= "
echo "DEFS ::= -DPACKAGE_NAME=\"nana\" -DPACKAGE_TARNAME=\"nana\" -DPACKAGE_VERSION=\"3.0\" -DPACKAGE_STRING=\"nana\ 3.0\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DPACKAGE=\"nana\" -DVERSION=\"3.0\" -DHAVE_VSPRINTF=1 -DHAVE_VSNPRINTF=1 -DHAVE_GETTIMEOFDAY=1"
echo "CC ::= gcc"
echo "CXX ::= g++"

echo ""
echo "* package specific configuration variables"
echo "I_DEFAULT_HANDLER ::= "
echo "DI_MAKE_VALID_BREAKPOINT ::= "
echo "DL_MAKE_VALID_BREAKPOINT ::= "

echo ""
echo "* version numbers of related tools"
echo "gdb-version ::= `/usr/bin/gdb --version | head -1`"
echo "cc-version ::= `gcc --version | head -1`"
echo "cxx-version ::= `g++ --version | head -1`"

echo ""
echo "* summary of the failures"
(
 grep "^Fail" test/check.log 
 grep "^Passed 0" test/check.log
) | 
grep -v "Failed 7 failures, 10 successes selftest.c" |
gawk '
{ 
  if(NF == 8) {
     failed[$6 $8]++ 
  } else {
     failed[$6]++
  }
}

END { 
  for(i in failed) { 
    s = s " " i 
  }
  
  if(s != "") {
    print "* Detailed test results"
    system("cat test/check.log")
  }

  print "nana-failed ::= " s 
}
'
) | $MAILER $DEST

